import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

# Step 1: Load the data
iris = load_iris()
X = iris.data
y = iris.target
target_names = iris.target_names

# Step 2: Standardize the features
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# Display standardized data for the first five samples in scientific notation
print("Standardized Data (first 5 samples):")
for i in range(5):  # Display only the first 5 samples
    formatted_row = " ".join(f"{val:.8e}" for val in X_scaled[i])
    print(f"[{formatted_row}]")

# Step 3: PCA with n=2 components
pca = PCA(n_components=2)
X_pca = pca.fit_transform(X_scaled)

# Step 4: Plot the data with the new principal components
plt.figure(figsize=(8, 6))
for i, target_name in enumerate(target_names):
    plt.scatter(X_pca[y == i, 0], X_pca[y == i, 1], label=target_name)
plt.title('PCA of Iris Dataset')
plt.xlabel('Principal Component 1')
plt.ylabel('Principal Component 2')
plt.legend()
plt.grid()
plt.show()

# Step 5: Display the variance among the 2 components
variance_ratio = pca.explained_variance_ratio_
print("Variance Ratio (real parts):")
print(variance_ratio.real)  # Display only the real parts
